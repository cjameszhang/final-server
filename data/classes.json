[{"description": "Incremental and interactive compiling, error correction, code optimization, models of code generators. ", "name": "Advanced Compiler Construction", "id": "CS 526"}, {"description": "Advanced concepts in operating system design and coverage of recent research directions. Resource management for parallel and distributed systems. Interaction between operating system design and computer architectures. Process management, virtual memory, interprocess communication, context switching, parallel and distributed file system designs, persistent objects, process and data migration, load balancing, security, protection. Term projects. ", "name": "Advanced Operating Systems", "id": "CS 523"}, {"description": "Theory of concurrency and concurrent programming languages. Formal models of concurrent computation such as process algebras, nets, and actors; high level concurrent programming languages and their operational semantics; methods for reasoning about correctness and complexity of concurrent programs. ", "name": "Concurrent Progrmg Languages", "id": "CS 524"}, {"description": "Visualization techniques useful in analysis of engineering and scientific data. Physical models; methods of computational science; two- and three-dimensional data types; visual representation schemes for scalar, vector, and tensor data; isosurface and volume visualization methods; visual monitoring; interactive steering. ", "name": "Scientific Visualization", "id": "CS 519"}, {"description": "An advanced course on principles and algorithms of data mining. Data cleaning and integration; descriptive and predictive mining; mining frequent, sequential, and structured patterns; clustering, outlier analysis and fraud detection; stream data, web, text, and biomedical data mining; security and privacy in data mining; research frontiers. ", "name": "Data Mining Principles", "id": "CS 512"}, {"description": "Peer-to-peer systems, sensor networks, and fundamental theoretical distributed computing. Review of classical work in each area, and application of design methodologies to explore overlaps across them. Emphasis on protocol design, systems issues, and theory. Reading selections are roughly two-third classical to one-third contemporary. Students write critiques, make presentations, and create a conference paper in a systematic manner. ", "name": "Advanced Distributed Systems", "id": "CS 525"}, {"description": "Fault-tolerant software, software architecture, software patterns, multi-media software, and knowledge-based approaches to software engineering. Case studies. ", "name": "Topics in Software Engineering", "id": "CS 527"}, {"description": "Same as ", "name": "Computer Systems Analysis", "id": "CS 541"}, {"description": "Formal models and concepts in automated cognition; integrating machine learning and prior knowledge; current approaches and detailed analyses of the role of reasoning in the learning process; computational complexity and fundamental tradeoffs between expressiveness and tractability; implications for state-of-the-art artificial intelligence areas such as automated planning, the semantic web, relational learning, structured prediction, latent models, structure learning, theory formation, etc.; philosophical and psychological aspects of integrating analytic and empirical evidence. ", "name": "Models of Cognitive Processes", "id": "CS 548"}, {"description": "Same as ", "name": "Fault-Tolerant Dig Syst Design", "id": "CS 536"}, {"description": "Advanced concepts in computer networks, including congestion control, quality of service, naming, routing, wireless networks, Internet architecture, measurement, network security, and selected recent research directions. ", "name": "Advanced Computer Networks", "id": "CS 538"}, {"description": "Same as ", "name": "Computer Vision", "id": "CS 543"}, {"description": "Numerical techniques for initial and boundary value problems in partial differential equations. Finite difference and finite element discretization techniques, direct and iterative solution methods for discrete problems, and programming techniques and usage of software packages. ", "name": "Numerical Methods for PDEs", "id": "CS 555"}, {"description": "Same as ", "name": "Seminar in Cognitive Science", "id": "CS 549"}, {"description": "Current research trends in computer and network security. Privacy, tamper-resistance, unwanted traffic, monitoring and surveillance, and critical infrastructure protection. Subtopics will vary depending upon current research trends. Students work in teams in close coordination with the course instructor to develop one of the topics in depth by carrying out background research and an exploratory project. ", "name": "Advanced Computer Security", "id": "CS 563"}, {"description": "Comprehensive treatment of algebraic and multigrid iterative methods to solve systems of equations, primarily linear equations arising from discretization of partial differential equations. ", "name": "Iterative & Multigrid Methods", "id": "CS 556"}, {"description": "NP-completeness, design and analysis techniques, approximation algorithms, randomized algorithms, combinatorial optimization, linear programming. Intended for graduate students in Computer Science. ", "name": "Algorithms", "id": "CS 573"}, {"description": "Same as ", "name": "Combinatorial Mathematics", "id": "CS 571"}, {"description": "Advanced topics in computer-aided methods for formal deduction, selected from areas of current research, such as: resolution theorem proving strategies, special relations, equational reasoning, unification theory, rewrite systems, mathematical induction, program derivation, hybrid inference systems, and programming with logic. ", "name": "Topics in Automated Deduction", "id": "CS 576"}, {"description": "Theoretical aspects of parallel and pipeline computation; time and processor bounds on classes of computations; data alignment network speed and cost bounds; conflict-free access memories; overall computer system ideas. ", "name": "Parallel Computer Architecture", "id": "CS 533"}, {"description": "Same as ", "name": "Embedded System Verification", "id": "CS 584"}, {"description": "Turing machines; determinism and non-determinism; time and space hierarchy theorems; speed-up and tape compression; Blum axioms; structure of complexity classes NP, P, NL, L, and PSPACE; complete problems; randomness and complexity classes RP, RL, and BPP; alternation, polynomial-time hierarchy; circuit complexity, parallel complexity, NC, and RNC; relativized computational complexity; time-space trade-offs. ", "name": "Computational Complexity", "id": "CS 579"}, {"description": "Individual study or reading in a subject not covered in normal course offerings. ", "name": "Individual Study", "id": "CS 597"}, {"description": "Seminar on topics of current interest as announced in the Class Schedule. ", "name": "Advanced Seminar", "id": "CS 591"}, {"description": "Approved for S/U grading only. May be repeated.", "name": "Thesis Research", "id": "CS 599"}, {"description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. ", "name": "Special Topics", "id": "CS 598"}, {"description": "Introduction to Computer Science as a field and career for computer science majors. Overview of the field and specific examples of problem areas and methods of solution.", "name": "Freshman Orientation", "id": "CS 100"}, {"description": "Fundamental principles, concepts, and methods of computing, with emphasis on applications in the physical sciences and engineering. Basic problem solving and programming techniques; fundamental algorithms and data structures; use of computers in solving engineering and scientific problems. Intended for engineering and science majors. ", "name": "Intro Computing: Engrg & Sci", "id": "CS 101"}, {"description": "Same as ", "name": "Little Bits to Big Ideas", "id": "CS 102"}, {"description": "Discrete mathematical structures frequently encountered in the study of Computer Science. Sets, propositions, Boolean algebra, induction, recursion, relations, functions, and graphs. ", "name": "Discrete Structures", "id": "CS 173"}, {"description": "Offered for honors credit in conjunction with other 100-level computer science courses taken concurrently. A special examination may be required for admission to this course. ", "name": "Freshman Honors", "id": "CS 196"}, {"description": "Basic concepts in computing and fundamental techniques for solving computational problems. Intended as a first course for computer science majors and others with a deep interest in computing. ", "name": "Intro to Computer Science", "id": "CS 125"}, {"description": "May be repeated.", "name": "Undergraduate Open Seminar", "id": "CS 199"}, {"description": "Ethics for the computing profession. Ethical decision-making; licensing; intellectual property, freedom of information, and privacy. ", "name": "Ethical & Professional Issues", "id": "CS 210"}, {"description": "Computing as an essential tool of academic and professional activities. Functions and interrelationships of computer system components: hardware, systems and applications software, and networks. Widely used application packages such as spreadsheets and databases. Concepts and practice of programming for the solution of simple problems in different application areas. Intended for non-science and non-engineering majors. ", "name": "Intro Computing: Non-Tech", "id": "CS 105"}, {"description": "Data abstractions: elementary data structures (lists, stacks, queues, and trees) and their implementation using an object-oriented programming language. Solutions to a variety of computational problems such as search on graphs and trees. Elementary analysis of algorithms. ", "name": "Data Structures", "id": "CS 225"}, {"description": "Fundamentals of computer architecture: digital logic design, working up from the logic gate level to understand the function of a simple computer; machine-level programming to understand implementation of high-level languages; performance models of modern computer architectures to enable performance optimization of software; hardware primitives for parallelism and security. ", "name": "Computer Architecture", "id": "CS 233"}, {"description": "Basics of system programming, including POSIX processes, process control, inter-process communication, synchronization, signals, simple memory management, file I/O and directories, shell programming, socket network programming, RPC programming in distributed systems, basic security mechanisms, and standard tools for systems programming such as debugging tools. ", "name": "System Programming", "id": "CS 241"}, {"description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. ", "name": "Special Topics", "id": "CS 398"}, {"description": "Fundamentals of numerical methods for students in science and engineering; floating-point computation, systems of linear equations, approximation of functions and integrals, the single nonlinear equation, and the numerical solution of ordinary differential equations; various applications in science and engineering; programming exercises and use of high quality mathematical library routines. ", "name": "Numerical Methods I", "id": "CS 357"}, {"description": "May be repeated. Prerequisite: Consent of instructor.", "name": "Individual Study", "id": "CS 397"}, {"description": "Intensive programming lab intended to strengthen skills in programming. ", "name": "Programming Studio", "id": "CS 242"}, {"description": "Group projects for honors credit in computer science. Sections of this course are offered in conjunction with other 200-level computer science courses taken concurrently. A special examination may be required for admission to this course. ", "name": "Honors Course", "id": "CS 296"}, {"description": "Theory, design, and implementation of text-based information systems. Text analysis, retrieval models (e.g., Boolean, vector space, probabilistic), text categorization, text filtering, clustering, retrieval system design and implementation, and applications to web information management. ", "name": "Text Information Systems", "id": "CS 410"}, {"description": "Concepts, techniques, and systems of data warehousing and data mining. Design and implementation of data warehouse and on-line analytical processing (OLAP) systems; data mining concepts, methods, systems, implementations, and applications. ", "name": "Introduction to Data Mining", "id": "CS 412"}, {"description": "Examination of the logical organization of databases: the entity-relationship model; the hierarchical, network, and relational data models and their languages. Functional dependencies and normal forms. Design, implementation, and optimization of query languages; security and integrity; concurrency control, and distributed database systems. ", "name": "Database Systems", "id": "CS 411"}, {"description": "Same as ", "name": "Intro to Combinatorics", "id": "CS 413"}, {"description": "Basic mathematical tools and computational techniques for modeling, rendering, and animating 3-D scenes. ", "name": "Interactive Computer Graphics", "id": "CS 418"}, {"description": "Structure of programming languages and their implementation. Basic language design principles; abstract data types; functional languages; type systems; object-oriented languages. Basics of lexing, parsing, syntax-directed translation, semantic analysis, and code generation. ", "name": "Progrmg Languages & Compilers", "id": "CS 421"}, {"description": "Advanced methods for representing, displaying, and rendering two-, three-, and four-dimensional scenes. General algebraic curves and surfaces, splines, Gaussian and bump-function representation, fractals, particle systems, constructive solid geometry methods, lighting models, radiosity, advanced ray-tracing methods, surface texturing animation techniques, data visualization methods. ", "name": "Production Computer Graphics", "id": "CS 419"}, {"description": "Fundamental issues in design and development of parallel programs for various types of parallel computers. Various programming models according to both machine type and application area. Cost models, debugging, and performance evaluation of parallel programs with actual application examples. ", "name": "Parallel Progrmg: Sci & Engrg", "id": "CS 420"}, {"description": "Exploration of major language design paradigms using imperative and functional programming as unifying themes. Tools include both practical language processor construction and theoretical models. ", "name": "Programming Language Design", "id": "CS 422"}, {"description": "Protocols, specification techniques, global states and their determination, reliable broadcast, transactions and commitment, security, and real-time systems. ", "name": "Distributed Systems", "id": "CS 425"}, {"description": "Supervisory control aspects of Cyber Physical Systems (CPS): fundamentals of reliability analysis, real-time scheduling, simple feedback control, software fault tolerance architecture, wireless networking and energy saving, principles of safety critical system engineering. Student groups design and demonstrate supervisory control architecture for a robot. ", "name": "Real-Time Systems", "id": "CS 424"}, {"description": "Organization and structure of modern operating systems and concurrent programming concepts. Deadlock, virtual memory, processor scheduling, and disk systems. Performance, security, and protection. ", "name": "Operating Systems Design", "id": "CS 423"}, {"description": "Software process, analysis and design. Software development paradigms, system engineering, function-based analysis and design, and object-oriented analysis and design. Course will use team-projects for hands-on exercises. ", "name": "Software Engineering I", "id": "CS 427"}, {"description": "Continuation of ", "name": "Software Engineering II", "id": "CS 428"}, {"description": "Continuation of ", "name": "Software Engineering II, ACP", "id": "CS 429"}, {"description": "Compiler structure, syntax analysis, syntax-directed translation, automatically constructed recognizers, semantic analysis, code generation, intermediate language, optimization techniques. ", "name": "Compiler Construction", "id": "CS 426"}, {"description": "A survey of sampled data systems and embedded architecture; key concepts in common embedded system applications; signal processing and control; embedded microprocessor and device interface; time-critical I/O handling; data communications; real-time operating systems and techniques for the development and analysis of embedded real-time software; hands-on laboratory projects. ", "name": "Embedded Systems", "id": "CS 431"}, {"description": "Computer system analysis and design. Organizational dependence on computations to be performed; speed and cost of parts and overall machines; instruction set design; pipeline and vector machines; memory hierarchy design. ", "name": "Computer System Organization", "id": "CS 433"}, {"description": "Theory and basic techniques in machine learning. Major theoretical paradigms and key concepts developed in machine learning in the context of applications such as natural language and text processing, computer vision, data mining, adaptive computer systems and others. Review of several supervised and unsupervised learning approaches: methods for learning linear representations; on-line learning, Bayesian methods; decision-trees; features and kernels; clustering and dimensionality reduction. ", "name": "Machine Learning", "id": "CS 446"}, {"description": "Layered architectures and the OSI Reference Model; design issues and protocols in the transport, network, and data link layers; architectures and control algorithms of local-area, point-to-point, and satellite networks; standards in networks access protocols; models of network interconnection; overview of networking and communication software. ", "name": "Communication Networks", "id": "CS 438"}, {"description": "Part-of-speech tagging, parsing, semantic analysis and machine translation. Relevant linguistics concepts from morphology (word formation) and lexical semantics (the meaning of words) to syntax (sentence structure) and compositional semantics (the meaning of sentences). ", "name": "Natural Language Processing", "id": "CS 447"}, {"description": "Major topics in and directions of research in artificial intelligence: AI languages (LISP and PROLOG), basic problem solving techniques, knowledge representation and computer inference, machine learning, natural language understanding, computer vision, robotics, and societal impacts. ", "name": "Artificial Intelligence", "id": "CS 440"}, {"description": "Fundamental principles of computer and communications security and information assurance: ethics, privacy, notions of threat, vulnerabilities, and risk in systems, information warfare, malicious software, data secrecy and integrity issues, network security, trusted computing, mandatory and discretionary access controls, certification and accreditation of systems against security standards. Security mechanisms: authentication, auditing, intrusion detection, access control, cryptography, security protocols, key distribution. ", "name": "Computer Security I", "id": "CS 461"}, {"description": "Linear system solvers, optimization techniques, interpolation and approximation of functions, solving systems of nonlinear equations, eigenvalue problems, least squares, and quadrature; numerical handling of ordinary and partial differential equations. ", "name": "Numerical Analysis", "id": "CS 450"}, {"description": "Operating systems security: access control, least privilege mechanism and malware techniques. Network security: firewalls, sniffing, tunnels, intrusion detection, AAA and worm structure. System security: forensics security architectures, and attack/defend exercises. Complements ", "name": "Security Laboratory", "id": "CS 460"}, {"description": "Program security, trusted base, privacy, anonymity, non-interference, information flow, confinement, advanced auditing, forensics, intrusion detection, key management and distribution, policy composition and analysis, formal approaches to specification and verification of secure systems and protocols, and topics in applied cryptography. ", "name": "Computer Security II", "id": "CS 463"}, {"description": "Mathematical models, languages, and methods for software specification, development, and verification. ", "name": "Formal Software Devel Methods", "id": "CS 477"}, {"description": "A project-focused course covering fundamental principles of user interface design, implementation, and evaluation. Small teams work on a term-long project that involves: analysis of the problem domain, user skills, and tasks; iterative prototyping of interfaces to address user needs; conducting several forms of evaluation such as cognitive walkthroughs and usability tests; implementation of the final prototype. Non-technical majors may enroll as non-programmers who participate in all aspects of the projects with the possible exception of implementation. ", "name": "User Interface Design", "id": "CS 465"}, {"description": "Same as ", "name": "Stochastic Processes & Applic", "id": "CS 481"}, {"description": "Formal methods for demonstrating correctness and other properties of programs. Invariant assertions; Hoare axiomatics; well-founded orderings for proving termination; structural induction; computational induction; data structures; parallel programs; overview of predicate calculus. ", "name": "Program Verification", "id": "CS 476"}, {"description": "Fundamental techniques for algorithm design and analysis, including recursion, dynamic programming, randomization, dynamic data structures, fundamental graph algorithms, and NP-completeness. Intended for undergraduates in Computer Science and graduate students in other departments. ", "name": "Fundamental Algorithms", "id": "CS 473"}, {"description": "Visualizing social interaction in networked spaces: investigation of patterns in networked communications systems such as messaging (email, instant messaging), social networking sites and collaborative sites; social network theory and visualizations; exploration of how to move beyond existing visualization techniques; visualizing the network identity over compilations of online data. ", "name": "Social Visualization", "id": "CS 467"}, {"description": "Algorithmic approaches in bioinformatics: (i) biological problems that can be solved computationally (e.g., discovering genes, and interactions among different genes and proteins); (ii) algorithmic techniques with wide applicability in solving these problems (e.g., dynamic programming and probabilistic methods); (iii) practical issues in translating the basic algorithmic ideas into accurate and efficient tools that biologists may use. ", "name": "Introduction to Bioinformatics", "id": "CS 466"}, {"description": "Same as ", "name": "Simulation", "id": "CS 482"}, {"description": "Techniques for the programming of all classes of parallel computers and devices including shared memory and distributed memory multiprocessors, SIMD processors and co-processors, and special purpose devices. Key concepts in parallel programming such as reactive and transformational programming, speculation, speedup, isoefficiency, and load balancing. Synchronization primitives, libraries and languages for parallel programming such as OpenMP and MPI, performance monitoring, program tuning, analysis and programming of numerical and symbolic parallel algorithms. ", "name": "Parallel Programming", "id": "CS 484"}, {"description": "Seminar on topics of current interest as announced in the Class Schedule. ", "name": "Seminar", "id": "CS 491"}, {"description": "Same as ", "name": "Applied Parallel Programming", "id": "CS 483"}, {"description": "Continuation of ", "name": "Senior Project II, ACP", "id": "CS 493"}, {"description": "First part of a project course in computer science. Students work in teams to solve typical commercial or industrial problems. Work involves planning, design, and implementation. Extensive oral and written work is required both on-campus and possibly off-campus at sponsors' locations. ", "name": "Senior Project I", "id": "CS 492"}, {"description": "Subject offerings of new and developing areas of knowledge in computer science intended to augment the existing curriculum. See Class Schedule or departmental course information for topics and prerequisites. ", "name": "Special Topics", "id": "CS 498"}, {"description": "Continuation of ", "name": "Senior Project II", "id": "CS 494"}, {"description": "Advanced concepts in data management and information system design and implementation, and recent developments in the field. 1) Relational roots, objects and extensibility, query languages, data indexing, query processing, transaction processing, benchmarks, and 2) semi-structured data and unstructured data, information extraction, information integration, web search and mining, and other emerging directions in the field. ", "name": "Advanced Data Management", "id": "CS 511"}, {"description": "Research and thesis development experience in computer science underguidance of a faculty member. Literature search, oral presentation, analysis and implementation, paper preparation, and completion of a written thesis. ", "name": "Senior Thesis", "id": "CS 499"}]